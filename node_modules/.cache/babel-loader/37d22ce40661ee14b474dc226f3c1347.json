{"ast":null,"code":"import _classCallCheck from \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/src/components/PokemonSearch.tsx\";\nimport React, { Component } from 'react';\nexport var PokemonSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PokemonSearch, _Component);\n\n  function PokemonSearch(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PokemonSearch).call(this, props));\n    _this.pokemonRef = void 0;\n\n    _this.onSearchClick = function () {\n      var inputValue = _this.pokemonRef.current.value;\n      fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(inputValue)).then(function (res) {\n        if (res.status !== 200) {\n          _this.setState({\n            error: true\n          });\n\n          return;\n        }\n\n        res.json().then(function (data) {\n          _this.setState({\n            error: false,\n            pokemon: {\n              name: data.name,\n              numberOfAbilites: data.abilities.length,\n              baseExperience: data.base_experience,\n              imageUrl: data.sprites.front_default\n            }\n          });\n        });\n      });\n    };\n\n    _this.addNumbers = function (a, b) {\n      return a + b;\n    };\n\n    _this.state = {\n      error: false,\n      pokemon: null\n    };\n    _this.pokemonRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(PokemonSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          userName = _this$props.name,\n          numberOfPokemons = _this$props.numberOfPokemons;\n      var _this$state = this.state,\n          error = _this$state.error,\n          pokemon = _this$state.pokemon;\n      var resultMarkup;\n\n      if (error) {\n        resultMarkup = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Pokemon not found, please try again\");\n      } else if (this.state.pokemon) {\n        resultMarkup = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: pokemon.imageUrl,\n          alt: \"pokemon\",\n          className: \"pokemon-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, name, \" has \", pokemon.numberOfAbilites, \" abilities and\", ' ', pokemon.baseExperience, \" base experience points\"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"User \", userName, ' ', numberOfPokemons && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"has \", numberOfPokemons, \" pokemons\")), React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.pokemonRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSearchClick,\n        className: \"my-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Search\"), resultMarkup);\n    }\n  }]);\n\n  return PokemonSearch;\n}(Component);\nexport default PokemonSearch;","map":{"version":3,"sources":["/Users/stephenguo/Downloads/classsed-react-typescript-tutorial-master/src/components/PokemonSearch.tsx"],"names":["React","Component","PokemonSearch","props","pokemonRef","onSearchClick","inputValue","current","value","fetch","then","res","status","setState","error","json","data","pokemon","name","numberOfAbilites","abilities","length","baseExperience","base_experience","imageUrl","sprites","front_default","addNumbers","a","b","state","createRef","userName","numberOfPokemons","resultMarkup"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAeA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAEE,yBAAYC,KAAZ,EAAyB;AAAA;;AAAA;;AACvB,uFAAMA,KAAN;AADuB,UADzBC,UACyB;;AAAA,UAQzBC,aARyB,GAQT,YAAY;AAC1B,UAAMC,UAAU,GAAG,MAAKF,UAAL,CAAgBG,OAAhB,CAAwBC,KAA3C;AACAC,MAAAA,KAAK,6CAAsCH,UAAtC,EAAL,CAAyDI,IAAzD,CAA8D,UAACC,GAAD,EAAS;AACrE,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAd;;AACA;AACD;;AACDH,QAAAA,GAAG,CAACI,IAAJ,GAAWL,IAAX,CAAgB,UAACM,IAAD,EAAU;AACxB,gBAAKH,QAAL,CAAc;AACZC,YAAAA,KAAK,EAAE,KADK;AAEZG,YAAAA,OAAO,EAAE;AACPC,cAAAA,IAAI,EAAEF,IAAI,CAACE,IADJ;AAEPC,cAAAA,gBAAgB,EAAEH,IAAI,CAACI,SAAL,CAAeC,MAF1B;AAGPC,cAAAA,cAAc,EAAEN,IAAI,CAACO,eAHd;AAIPC,cAAAA,QAAQ,EAAER,IAAI,CAACS,OAAL,CAAaC;AAJhB;AAFG,WAAd;AASD,SAVD;AAWD,OAhBD;AAiBD,KA3BwB;;AAAA,UA4BzBC,UA5ByB,GA4BZ,UAACC,CAAD,EAAYC,CAAZ,EAAkC;AAC7C,aAAOD,CAAC,GAAGC,CAAX;AACD,KA9BwB;;AAEvB,UAAKC,KAAL,GAAa;AACXhB,MAAAA,KAAK,EAAE,KADI;AAEXG,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,UAAKb,UAAL,GAAkBJ,KAAK,CAAC+B,SAAN,EAAlB;AANuB;AAOxB;;AATH;AAAA;AAAA,6BAiCW;AAAA,wBACsC,KAAK5B,KAD3C;AAAA,UACO6B,QADP,eACCd,IADD;AAAA,UACiBe,gBADjB,eACiBA,gBADjB;AAAA,wBAEoB,KAAKH,KAFzB;AAAA,UAEChB,KAFD,eAECA,KAFD;AAAA,UAEQG,OAFR,eAEQA,OAFR;AAIP,UAAIiB,YAAJ;;AAEA,UAAIpB,KAAJ,EAAW;AACToB,QAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAf;AACD,OAFD,MAEO,IAAI,KAAKJ,KAAL,CAAWb,OAAf,EAAwB;AAC7BiB,QAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEjB,OAAO,CAACO,QAAlB;AAA4B,UAAA,GAAG,EAAC,SAAhC;AAA0C,UAAA,SAAS,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,IADH,WACcD,OAAO,CAACE,gBADtB,oBACsD,GADtD,EAEGF,OAAO,CAACK,cAFX,4BAFF,CADF;AASD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQU,QADR,EACkB,GADlB,EAEGC,gBAAgB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWA,gBAAX,cAFvB,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAE,KAAK7B,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,QAAA,SAAS,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EASG6B,YATH,CADF;AAaD;AAlEH;;AAAA;AAAA,EAAmCjC,SAAnC;AAqEA,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport User from '../interfaces/User.interface';\n\ninterface SearchState {\n  error: boolean;\n  pokemon: Pokemon;\n}\n\ninterface Pokemon {\n  name: string;\n  numberOfAbilites: number;\n  baseExperience: number;\n  imageUrl: string;\n}\n\nexport class PokemonSearch extends Component<User, SearchState> {\n  pokemonRef: React.RefObject<HTMLInputElement>;\n  constructor(props: User) {\n    super(props);\n    this.state = {\n      error: false,\n      pokemon: null\n    };\n    this.pokemonRef = React.createRef();\n  }\n  onSearchClick = (): void => {\n    const inputValue = this.pokemonRef.current.value;\n    fetch(`https://pokeapi.co/api/v2/pokemon/${inputValue}`).then((res) => {\n      if (res.status !== 200) {\n        this.setState({ error: true });\n        return;\n      }\n      res.json().then((data) => {\n        this.setState({\n          error: false,\n          pokemon: {\n            name: data.name,\n            numberOfAbilites: data.abilities.length,\n            baseExperience: data.base_experience,\n            imageUrl: data.sprites.front_default\n          }\n        });\n      });\n    });\n  };\n  addNumbers = (a: number, b: number): number => {\n    return a + b;\n  };\n  render() {\n    const { name: userName, numberOfPokemons } = this.props;\n    const { error, pokemon } = this.state;\n\n    let resultMarkup;\n\n    if (error) {\n      resultMarkup = <p>Pokemon not found, please try again</p>;\n    } else if (this.state.pokemon) {\n      resultMarkup = (\n        <div>\n          <img src={pokemon.imageUrl} alt=\"pokemon\" className=\"pokemon-image\" />\n          <p>\n            {name} has {pokemon.numberOfAbilites} abilities and{' '}\n            {pokemon.baseExperience} base experience points\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <p>\n          User {userName}{' '}\n          {numberOfPokemons && <span>has {numberOfPokemons} pokemons</span>}\n        </p>\n        <input type=\"text\" ref={this.pokemonRef} />\n        <button onClick={this.onSearchClick} className=\"my-button\">\n          Search\n        </button>\n        {resultMarkup}\n      </div>\n    );\n  }\n}\n\nexport default PokemonSearch;\n"]},"metadata":{},"sourceType":"module"}